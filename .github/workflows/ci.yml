name: expander-rs CI

on: [pull_request, push]

env:
  RUSTFLAGS: "-Dwarnings -C target-cpu=native"
  RUST_BACKTRACE: 1

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - run: cargo fmt --all -- --check
      - run: cargo clippy

  build-and-test:
    name: Build and Test (${{ matrix.os }}, ${{ matrix.feature }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, 7950x3d]
        feature: [avx2, avx512]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Set RUSTFLAGS for AVX
        run: echo "RUSTFLAGS=$RUSTFLAGS -C target-feature=+${{ matrix.feature }}" >> $GITHUB_ENV
      - name: Build and Test
        run: |
          cargo build --all-features --release
          cargo test --all-features --release

  benchmark:
    name: Benchmark (${{ matrix.os }}, ${{ matrix.feature }}, ${{ matrix.field }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, 7950x3d]
        feature: [avx2, avx512]
        field: [m31ext3, fr, gf2ext128]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Set RUSTFLAGS for AVX
        run: echo "RUSTFLAGS=$RUSTFLAGS -C target-feature=+${{ matrix.feature }}" >> $GITHUB_ENV
      - name: Run benchmark
        run: |
          cargo run --bin=dev-setup --release
          cargo run --release -- -t ${{ matrix.os == 'macos-latest' && 2 || 16 }} -f ${{ matrix.field }}